%lang starknet
%builtins pedersen range_check
from starkware.cairo.common.cairo_builtins import HashBuiltin
from starkware.cairo.common.alloc import alloc
from starkware.cairo.common.math import (unsigned_div_rem)

@view
func header {
        range_check_ptr
    } () -> (
        z_len : felt,
        z : felt*
    ):
    alloc_locals

    let (local z) = alloc()

    assert [z+0] = 1568433012465980210040715044454520
    assert [z+1] = 28
    let z_len = 2

    return (z_len, z)
end

@view
func tempo {
        range_check_ptr
    } (
        tempo_multiplier : felt,
        tempo_divider : felt
    ) -> (
        z_len : felt,
        z : felt*
    ):
    alloc_locals

    let (local z) = alloc()

    assert [z+0] = 1297379947
    assert [z+1] = 8
    assert [z+2] = 484
    assert [z+3] = 8
    assert [z+4] = 0
    assert [z+5] = 2
    assert [z+6] = 308290407136960384311518564
    assert [z+7] = 22
    assert [z+8] = 0
    assert [z+9] = 2
    assert [z+10] = 280920976261185
    assert [z+11] = 12
    assert [z+12] = 0
    assert [z+13] = 2
    assert [z+14] = 71872893331576840
    assert [z+15] = 14
    assert [z+16] = 0
    assert [z+17] = 2
    assert [z+18] = 1096709963776
    assert [z+19] = 10
    assert [z+20] = 0
    assert [z+21] = 2

    assert [z+22] = 16732419
    assert [z+23] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+24] = adjusted_value
    assert [z+25] = 6
    assert [z+26] = 36112
    assert [z+27] = 4

    assert [z+28] = 16732419
    assert [z+29] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+30] = adjusted_value
    assert [z+31] = 6
    assert [z+32] = 40
    assert [z+33] = 2

    assert [z+34] = 16732419
    assert [z+35] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+36] = adjusted_value
    assert [z+37] = 6
    assert [z+38] = 40
    assert [z+39] = 2

    assert [z+40] = 16732419
    assert [z+41] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+42] = adjusted_value
    assert [z+43] = 6
    assert [z+44] = 33056
    assert [z+45] = 4

    assert [z+46] = 16732419
    assert [z+47] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+48] = adjusted_value
    assert [z+49] = 6
    assert [z+50] = 41808
    assert [z+51] = 4

    assert [z+52] = 16732419
    assert [z+53] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+54] = adjusted_value
    assert [z+55] = 6
    assert [z+56] = 40
    assert [z+57] = 2

    assert [z+58] = 16732419
    assert [z+59] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+60] = adjusted_value
    assert [z+61] = 6
    assert [z+62] = 40
    assert [z+63] = 2

    assert [z+64] = 16732419
    assert [z+65] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+66] = adjusted_value
    assert [z+67] = 6
    assert [z+68] = 33056
    assert [z+69] = 4

    assert [z+70] = 16732419
    assert [z+71] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+72] = adjusted_value
    assert [z+73] = 6
    assert [z+74] = 36728
    assert [z+75] = 4

    assert [z+76] = 16732419
    assert [z+77] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+78] = adjusted_value
    assert [z+79] = 6
    assert [z+80] = 40
    assert [z+81] = 2

    assert [z+82] = 16732419
    assert [z+83] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+84] = adjusted_value
    assert [z+85] = 6
    assert [z+86] = 40
    assert [z+87] = 2

    assert [z+88] = 16732419
    assert [z+89] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+90] = adjusted_value
    assert [z+91] = 6
    assert [z+92] = 33056
    assert [z+93] = 4

    assert [z+94] = 16732419
    assert [z+95] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+96] = adjusted_value
    assert [z+97] = 6
    assert [z+98] = 34872
    assert [z+99] = 4

    assert [z+100] = 16732419
    assert [z+101] = 6
    tempvar value_ = 1250000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+102] = adjusted_value
    assert [z+103] = 6
    assert [z+104] = 120
    assert [z+105] = 2

    assert [z+106] = 16732419
    assert [z+107] = 6
    tempvar value_ = 1304348 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+108] = adjusted_value
    assert [z+109] = 6
    assert [z+110] = 120
    assert [z+111] = 2

    assert [z+112] = 16732419
    assert [z+113] = 6
    tempvar value_ = 1395349 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+114] = adjusted_value
    assert [z+115] = 6
    assert [z+116] = 120
    assert [z+117] = 2

    assert [z+118] = 16732419
    assert [z+119] = 6
    tempvar value_ = 1428571 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+120] = adjusted_value
    assert [z+121] = 6
    assert [z+122] = 40
    assert [z+123] = 2

    assert [z+124] = 16732419
    assert [z+125] = 6
    tempvar value_ = 1463415 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+126] = adjusted_value
    assert [z+127] = 6
    assert [z+128] = 40
    assert [z+129] = 2

    assert [z+130] = 16732419
    assert [z+131] = 6
    tempvar value_ = 1500000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+132] = adjusted_value
    assert [z+133] = 6
    assert [z+134] = 40
    assert [z+135] = 2

    assert [z+136] = 16732419
    assert [z+137] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+138] = adjusted_value
    assert [z+139] = 6
    assert [z+140] = 46640
    assert [z+141] = 4

    assert [z+142] = 16732419
    assert [z+143] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+144] = adjusted_value
    assert [z+145] = 6
    assert [z+146] = 40
    assert [z+147] = 2

    assert [z+148] = 16732419
    assert [z+149] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+150] = adjusted_value
    assert [z+151] = 6
    assert [z+152] = 40
    assert [z+153] = 2

    assert [z+154] = 16732419
    assert [z+155] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+156] = adjusted_value
    assert [z+157] = 6
    assert [z+158] = 33056
    assert [z+159] = 4

    assert [z+160] = 16732419
    assert [z+161] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+162] = adjusted_value
    assert [z+163] = 6
    assert [z+164] = 33840
    assert [z+165] = 4

    assert [z+166] = 16732419
    assert [z+167] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+168] = adjusted_value
    assert [z+169] = 6
    assert [z+170] = 40
    assert [z+171] = 2

    assert [z+172] = 16732419
    assert [z+173] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+174] = adjusted_value
    assert [z+175] = 6
    assert [z+176] = 40
    assert [z+177] = 2

    assert [z+178] = 16732419
    assert [z+179] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+180] = adjusted_value
    assert [z+181] = 6
    assert [z+182] = 40
    assert [z+183] = 2

    assert [z+184] = 16732419
    assert [z+185] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+186] = adjusted_value
    assert [z+187] = 6
    assert [z+188] = 34168
    assert [z+189] = 4

    assert [z+190] = 16732419
    assert [z+191] = 6
    tempvar value_ = 1250000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+192] = adjusted_value
    assert [z+193] = 6
    assert [z+194] = 120
    assert [z+195] = 2

    assert [z+196] = 16732419
    assert [z+197] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+198] = adjusted_value
    assert [z+199] = 6
    assert [z+200] = 120
    assert [z+201] = 2

    assert [z+202] = 16732419
    assert [z+203] = 6
    tempvar value_ = 1500000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+204] = adjusted_value
    assert [z+205] = 6
    assert [z+206] = 120
    assert [z+207] = 2

    assert [z+208] = 16732419
    assert [z+209] = 6
    tempvar value_ = 1578947 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+210] = adjusted_value
    assert [z+211] = 6
    assert [z+212] = 120
    assert [z+213] = 2

    assert [z+214] = 16732419
    assert [z+215] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+216] = adjusted_value
    assert [z+217] = 6
    assert [z+218] = 33096
    assert [z+219] = 4

    assert [z+220] = 16732419
    assert [z+221] = 6
    tempvar value_ = 1304348 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+222] = adjusted_value
    assert [z+223] = 6
    assert [z+224] = 40
    assert [z+225] = 2

    assert [z+226] = 16732419
    assert [z+227] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+228] = adjusted_value
    assert [z+229] = 6
    assert [z+230] = 40
    assert [z+231] = 2

    assert [z+232] = 16732419
    assert [z+233] = 6
    tempvar value_ = 1250000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+234] = adjusted_value
    assert [z+235] = 6
    assert [z+236] = 40
    assert [z+237] = 2

    assert [z+238] = 16732419
    assert [z+239] = 6
    tempvar value_ = 1224490 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+240] = adjusted_value
    assert [z+241] = 6
    assert [z+242] = 40
    assert [z+243] = 2

    assert [z+244] = 16732419
    assert [z+245] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+246] = adjusted_value
    assert [z+247] = 6
    assert [z+248] = 47880
    assert [z+249] = 4

    assert [z+250] = 16732419
    assert [z+251] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+252] = adjusted_value
    assert [z+253] = 6
    assert [z+254] = 40
    assert [z+255] = 2

    assert [z+256] = 16732419
    assert [z+257] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+258] = adjusted_value
    assert [z+259] = 6
    assert [z+260] = 40
    assert [z+261] = 2

    assert [z+262] = 16732419
    assert [z+263] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+264] = adjusted_value
    assert [z+265] = 6
    assert [z+266] = 40
    assert [z+267] = 2

    assert [z+268] = 16732419
    assert [z+269] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+270] = adjusted_value
    assert [z+271] = 6
    assert [z+272] = 33632
    assert [z+273] = 4

    assert [z+274] = 16732419
    assert [z+275] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+276] = adjusted_value
    assert [z+277] = 6
    assert [z+278] = 40
    assert [z+279] = 2

    assert [z+280] = 16732419
    assert [z+281] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+282] = adjusted_value
    assert [z+283] = 6
    assert [z+284] = 40
    assert [z+285] = 2

    assert [z+286] = 16732419
    assert [z+287] = 6
    tempvar value_ = 1428571 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+288] = adjusted_value
    assert [z+289] = 6
    assert [z+290] = 40
    assert [z+291] = 2

    assert [z+292] = 16732419
    assert [z+293] = 6
    tempvar value_ = 1276596 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+294] = adjusted_value
    assert [z+295] = 6
    assert [z+296] = 34624
    assert [z+297] = 4

    assert [z+298] = 16732419
    assert [z+299] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+300] = adjusted_value
    assert [z+301] = 6
    assert [z+302] = 34376
    assert [z+303] = 4

    assert [z+304] = 16732419
    assert [z+305] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+306] = adjusted_value
    assert [z+307] = 6
    assert [z+308] = 40
    assert [z+309] = 2

    assert [z+310] = 16732419
    assert [z+311] = 6
    tempvar value_ = 1500000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+312] = adjusted_value
    assert [z+313] = 6
    assert [z+314] = 40
    assert [z+315] = 2

    assert [z+316] = 16732419
    assert [z+317] = 6
    tempvar value_ = 1714286 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+318] = adjusted_value
    assert [z+319] = 6
    assert [z+320] = 40
    assert [z+321] = 2

    assert [z+322] = 16732419
    assert [z+323] = 6
    tempvar value_ = 1200000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+324] = adjusted_value
    assert [z+325] = 6
    assert [z+326] = 34376
    assert [z+327] = 4

    assert [z+328] = 16732419
    assert [z+329] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+330] = adjusted_value
    assert [z+331] = 6
    assert [z+332] = 40
    assert [z+333] = 2

    assert [z+334] = 16732419
    assert [z+335] = 6
    tempvar value_ = 1500000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+336] = adjusted_value
    assert [z+337] = 6
    assert [z+338] = 40
    assert [z+339] = 2

    assert [z+340] = 16732419
    assert [z+341] = 6
    tempvar value_ = 1714286 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+342] = adjusted_value
    assert [z+343] = 6
    assert [z+344] = 40
    assert [z+345] = 2

    assert [z+346] = 16732419
    assert [z+347] = 6
    tempvar value_ = 1333333 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+348] = adjusted_value
    assert [z+349] = 6
    assert [z+350] = 33136
    assert [z+351] = 4

    assert [z+352] = 16732419
    assert [z+353] = 6
    tempvar value_ = 1428571 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+354] = adjusted_value
    assert [z+355] = 6
    assert [z+356] = 33136
    assert [z+357] = 4

    assert [z+358] = 16732419
    assert [z+359] = 6
    tempvar value_ = 1500000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+360] = adjusted_value
    assert [z+361] = 6
    assert [z+362] = 33384
    assert [z+363] = 4

    assert [z+364] = 16732419
    assert [z+365] = 6
    tempvar value_ = 1714286 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+366] = adjusted_value
    assert [z+367] = 6
    assert [z+368] = 40
    assert [z+369] = 2

    assert [z+370] = 16732419
    assert [z+371] = 6
    tempvar value_ = 1875000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+372] = adjusted_value
    assert [z+373] = 6
    assert [z+374] = 40
    assert [z+375] = 2

    assert [z+376] = 16732419
    assert [z+377] = 6
    tempvar value_ = 2000000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+378] = adjusted_value
    assert [z+379] = 6
    assert [z+380] = 40
    assert [z+381] = 2

    assert [z+382] = 16732419
    assert [z+383] = 6
    tempvar value_ = 2400000 * tempo_multiplier
    let (adjusted_value, _) = unsigned_div_rem(value_, tempo_divider)
    assert [z+384] = adjusted_value
    assert [z+385] = 6
    assert [z+386] = 0
    assert [z+387] = 2
    assert [z+388] = 16723712
    assert [z+389] = 6
    let z_len = 390

    return (z_len, z)
end


@view
func rest {
        range_check_ptr
    } () -> (
        z_len : felt,
        z : felt*
    ):
    alloc_locals

    let (local z) = alloc()

    assert [z+0] = 136630055383401419165459256648872088915370718355070635567016276660044325236
    assert [z+1] = 171607135751107360835153850990550848278901814907649016260995280726644490416
    assert [z+2] = 113464743677373314655073568444025063277160045892337425449062156638953152552
    assert [z+3] = 113079296978082138809168953273320639364087511599734065458855640268621764610
    assert [z+4] = 113243914718050506251437998750837951084163117612438634885412266883359251752
    assert [z+5] = 107777677702639945914294759784202598350614420395847562769232411009959143488
    assert [z+6] = 1541035458586732594269599615215932347387684275275889329446827895824680
    assert [z+7] = 113078218160200389418931272044626932058834314494626966372767322952070879258
    assert [z+8] = 113464797613325281406841269737624415586849081400865788077566515006622539560
    assert [z+9] = 109544524980920037284863919973955582952321948582015848508326368335724544000
    assert [z+10] = 116861454492400423314599677172897801500139214208025931911207980862099445761
    assert [z+11] = 113954991761484980790412572125867432348579491458948010693634407605719810152
    assert [z+12] = 3976484425258555025261000123887152530773962554826961037549741941732163584
    assert [z+13] = 71095621274435223456101687246715171175868908514757599625134422162130874398
    assert [z+14] = 120145607144917229391957795022865548162644715780311753116204469354249069968
    assert [z+15] = 111311372045289567300761757768503024441241334808814604805139589383285974852
    assert [z+16] = 8681102936402857851906852425557490090661743249402972951364567740466237
    assert [z+17] = 15351218580667551335635060357007750949840830733759998810966393542850652221
    assert [z+18] = 40915196900624204185819140566789388877295598894356322329169922519256793408
    assert [z+19] = 224455581611043530764473812017273558506083838527030941004479485065149022274
    assert [z+20] = 58572971225668422394071383627881242701880556007332037495324493903931281467
    assert [z+21] = 90386860794525681353822626086202394439357930446189049285872313396123156480
    assert [z+22] = 2762531815603811938116572371113295639033120811956687527932187166123950080
    assert [z+23] = 111436411332950948349403710390236688482441222212203760000599647494179127360
    assert [z+24] = 90148460749070711404653668318567337399387874924559738225962638551984111656
    assert [z+25] = 104410703345539945920742897230157723512548587545792150323106496148647444544
    assert [z+26] = 49749513105359058687802873786194552777989049096223116845912050912953638440
    assert [z+27] = 113079296766223414499860207495510104097371206440924825000121465147437492283
    assert [z+28] = 58583613628514768963114431343691801356642761752858811951449348698940644160
    assert [z+29] = 127228530969450891137219190748329192270086178494396971703417896963271567419
    assert [z+30] = 42681990045510873706274797531544075025681592295060574712893643130193068856
    assert [z+31] = 53467828975325948365640765594857035972559208036512237201844579609425739840
    assert [z+32] = 63884289625231637096961145989366563348808751980038392514083924598985850882
    assert [z+33] = 311408305266468648454430449787076492676370970351579778188095328473187434496
    assert [z+34] = 457137093343168405482527644090211200534089577116217194962228948511178752
    assert [z+35] = 35779731696748760646155335621041857893161588820507268924244714230435036705
    assert [z+36] = 69362550916062780019147821224084172831089753794565191367402187257429360701
    assert [z+37] = 83312786469044993937171471973718251521629927035490120193481942181739178792
    assert [z+38] = 104243983268251851069594991836588218369088856077547114289537680582509625100
    assert [z+39] = 254834020357657528879856911286808288291149225840597163911002580333111685121
    assert [z+40] = 311409599133322573254942868198752859968075855465662938804099447081887349280
    assert [z+41] = 71074183904391631057098376200636307650718400908220604945157488329387446331
    assert [z+42] = 1674060743039123329069343525906937939461633856941868708704015234908672
    assert [z+43] = 408447428770192705128292955168190475750370853745405596501282393190564016
    assert [z+44] = 113078650274571032111852600287617365864215679984019426382931066117043650560
    assert [z+45] = 127779085225543814656415289990756019971713501320800132832739984699780608064
    assert [z+46] = 70698477118419727739061479338064395381376348779855044039535148207282733848
    assert [z+47] = 25143064541358520494145270282681846355474602784040806228799512409701104384
    assert [z+48] = 442821362827690566172040404457397640770192806505579363097767689587277880
    assert [z+49] = 3978210072673931649495266387827501445022535764434429754070178764945373976
    assert [z+50] = 4750132822003911841717631834044597974182823485192869569444613916977004603
    assert [z+51] = 53283072434177909337907249388841237067217480753288286635505417674842718756
    assert [z+52] = 68356625468335329026035431734517391853586516295411795761894936783083306779
    assert [z+53] = 254833180388519572100315855441105551880147061606476653752424487045254234136
    assert [z+54] = 3975406343392895985076799558216590937557825787194734117813577809139335824
    assert [z+55] = 118378759568800588961700809646036436758896351334072842262495557290272768000
    assert [z+56] = 463391427063082261946635724549092815973141803955958026758769707273185282
    assert [z+57] = 113955557919500207278990375800985708085909925767263413365013925338119422008
    assert [z+58] = 2208559278588800645252488304743256923864323024828392779924349867421812224
    assert [z+59] = 2229264099296585533710574444902650330588418306220093886235895000798537791
    assert [z+60] = 1782216473010483065254794093275349635656750621724173550050205038018960
    assert [z+61] = 125446175509823575711415253652201069886950791217764866325458701109586050560
    assert [z+62] = 449507430012519865522039994872023244776653878589891555835968182048988928
    assert [z+63] = 125756738746200849990599294430317324292478991872334232283983588056443143168
    assert [z+64] = 407881269890182490737125291057449921192365438215688673380353732015833160
    assert [z+65] = 3975408028440990981782743619621744849970649420837917501674023923013400832
    assert [z+66] = 421630843513181719154318048453545573393405585635318080137352588575326335
    assert [z+67] = 27498151363697864665938274292953656181247912795224335882497896876295258113
    assert [z+68] = 109544524992377505536604402831102423135901206837466795087706564192220231960
    assert [z+69] = 71067282158878835229945696371958405628868019431816272014388661049303207993
    assert [z+70] = 63884100935855412109897082800550389931578359076023441606329296780731048256
    assert [z+71] = 183760726133020283344712809618123701899472770686090512657239940086506739714
    assert [z+72] = 254846984033058904622167144164837334938519703732637870176879018408463564861
    assert [z+73] = 47982585159740999344281361490724185674913115234014035313914140977941986624
    assert [z+74] = 505745877114691714739363067592553690819058865340156215150477462815194368
    assert [z+75] = 108012753287802324029805437458168953555297681125063596620742156455795771136
    assert [z+76] = 421954362873187574722712387589281429758165080149642579614747077126660136
    assert [z+77] = 120145607892040593419172689770539065054795899296698517886943174029568114761
    assert [z+78] = 81483985446430190679316960775417262748706702858751589392107922304683278336
    assert [z+79] = 116847650999642615176310468145135824372781993160878027025079680897937063168
    assert [z+80] = 503827617012957916060754142794824126123848554225926115529814273089939522
    assert [z+81] = 1864462258961191049746574362026961895873253157907286961190557821649023
    assert [z+82] = 52234060909363974083137700373995954573595774769856210778074717183465701376
    assert [z+83] = 133052208154144186465370939940424994164745026032919800584445995190093102848
    assert [z+84] = 456193497197349585829066475525176098236560084485027557256964037828870145
    assert [z+85] = 120145608332560112595542331987646408117137304650275918647485968654467613732
    assert [z+86] = 69424666635652152151139019144600864559165083809416606806595537926317146180
    assert [z+87] = 63884397462384364377786410640982315303516674005556035348723464136513028416
    assert [z+88] = 24595159158205343937160826797051143901624701247532443516086023671006510
    assert [z+89] = 68356623783338687437435346593367618600773802334130582437215214086136037143
    assert [z+90] = 254846983881659881951991112255503389704049118625838047210518244199646625809
    assert [z+91] = 113685653496438648778197514566609444175447711152985442512055319419407826944
    assert [z+92] = 111636805758495223994077364537820937424706274242998573610523790600437442108
    assert [z+93] = 51516252330169019738612589920120384306273667729254305094002858139672668163
    assert [z+94] = 254821371978412819551533305551813125637426757931192548086760638542918989826
    assert [z+95] = 113955746641248274178960218714275104483375254981786324619424782061522190337
    assert [z+96] = 120145608437525310848266349631456373008664421142773268546489121445989319236
    assert [z+97] = 53258626545221202647262612557226793871334691587138172652828421468945645888
    assert [z+98] = 120968633657294606412840665098511134250407138737653088688351691377330825273
    assert [z+99] = 277692838149988547645228191553536650785633716909473972562273661425828352
    assert [z+100] = 436108335696193966668874846066422906427065682982618812963951927490723880
    assert [z+101] = 2211984804469651938181655149233467495459400696947272611432000573652615214
    assert [z+102] = 71115594387461917407652357905801408852747037266325321914220785476084965672
    assert [z+103] = 120145606847492958804996259492520560022850917896485168043073561942911107125
    assert [z+104] = 71115594386216540349791852956393100107715297041746048566316085505084375592
    assert [z+105] = 134280384628297034455104594999660364856372991631385271769693447187649594288
    assert [z+106] = 113464824521039532048285937772589619554912511290893147569755086118300890664
    assert [z+107] = 132513537454503966925889265752503956739154560049860979475981531165737429070
    assert [z+108] = 2271813345902492334546467282014912643735444751635787491327533554093568
    assert [z+109] = 559800578409851756249786251382163802845496354695867243173312407521656832
    assert [z+110] = 122148192509914661830398748757550201977204149865442894941898080923078885442
    assert [z+111] = 86853355384589148719472640083615534599875790875823903564474559823398045504
    assert [z+112] = 98965877256621319377587028574618637142372245380299940761949628965591187471
    assert [z+113] = 113956582396707300465158407132953465481802873142848409231443045209306320560
    assert [z+114] = 113464797561089651021461844433459107978261084344533335559939223346107934723
    assert [z+115] = 113956474556915801418263844702787877415375609170360435379402752286836764736
    assert [z+116] = 98952062817619801505016817281508819361701491028925349079038430663982711360
    assert [z+117] = 127235432745005375161419169417309370504565865225077956943752212875713263144
    assert [z+118] = 100712242369857935129166638977129223311298516308091498996252677523615494208
    assert [z+119] = 155491168885308595748467490582756125616037140827273590642186439741323753756
    assert [z+120] = 71067282368661379458127206111180611519476910041543017209712146446604057600
    assert [z+121] = 141762763878492441865867858196501258750862365856982396528586585957470306368
    assert [z+122] = 46215818991249583409417160914615832288873084914026591247227800731693630524
    assert [z+123] = 4003015857856285314252892991851305231742719058108083360295633265277216831
    assert [z+124] = 1783058971344812701147717563018930008790441749619731789855432192246784
    assert [z+125] = 2222362351725559362265190182044885311578770922253623110065616625376441862
    assert [z+126] = 311409599238596423964631609146703903414982882809275396663233391514334806062
    assert [z+127] = 69376354409579113474516887251149780847681056457863867933422277930279839805
    assert [z+128] = 1783058971343831332308856668748620274592906607966418383043318423814145
    assert [z+129] = 116611913458824617077409554236944066534618779639171217303955479782603897638
    assert [z+130] = 71081085651985383306911593300971299364373087259150887495738329789739597592
    assert [z+131] = 254819376894177272364527996292932006075390703550927228507451999828624218664
    assert [z+132] = 104243983477230973789101055185827146146267617512500457947558411855325051700
    assert [z+133] = 71081085651924090937243141254389956264547286010061042953868125249311342592
    assert [z+134] = 104603952243250081755830927473851696476768024711713150420402683615677392960
    assert [z+135] = 1837387780595318495684402849410468024144184435530194502038873996006976
    assert [z+136] = 155491182264083386492851820929219723470570824506875355701784284879585159234
    assert [z+137] = 1862991005541080562099790142919179741363182891663334159130419515112236
    assert [z+138] = 491861503758356856201382648528783136272956816095364601015392864334512197
    assert [z+139] = 1920053796755303088233256253030750551166746699752830999660214461146152
    assert [z+140] = 120145606637751487766266105436918709527323723289278102696628084548569220096
    assert [z+141] = 415992006813816404024024415824085378415793999769534517045975116786186242
    assert [z+142] = 113078281260299021643084195920677043229004765847163761162710753264996984640
    assert [z+143] = 1839084464925512269179252200769074615890495552585826949800734760407103
    assert [z+144] = 1783796157385512290322077849864004918213385487463546040038243890016320
    assert [z+145] = 70684674468226142362025065937295565445347681005168672504919486396901639202
    assert [z+146] = 71143201372805692335607098288714078497027688364256279591547692812532776960
    assert [z+147] = 109799890446416080640510552971454344375155969176079591205696413320119076115
    assert [z+148] = 71150103114616096530732191227328406351114812250384893005407144904136335360
    assert [z+149] = 311407442442863020527943474434322350604832772742192740078769472448313703424
    assert [z+150] = 456220457144016735318151117296371827515615461260571558293490434515734704
    assert [z+151] = 113464770653397897484654551265092092811565068561413631457781222537754058792
    assert [z+152] = 113078219319869795239170316583826590999297783755174365876804852275736477698
    assert [z+153] = 254929804944688925259521165388490362813912605643748299241162501866884431940
    assert [z+154] = 76183124738307714442142059428009807778507506297170594279608240690413315880
    assert [z+155] = 116611913554734714249002641858170851830729654533216789583555273636897237544
    assert [z+156] = 116611913552260029667739909453783130219083588814970848725061495414864157840
    assert [z+157] = 107777677913675917941114683145355458784397763142812824389654199444107716610
    assert [z+158] = 113078623327791615295487850976180178311906279930069703485726110703965253120
    assert [z+159] = 108005581941950402167241454333705280047280293969942224691460430701306854686
    assert [z+160] = 71094889145072686635894888610352456426941614751368785252112022556939396391
    assert [z+161] = 128979869850004940776818978075982322899791477695476985481326972105310339396
    assert [z+162] = 2004319676728665814541178434760755988001394687272549445446636614266117
    assert [z+163] = 311407873802213872181592166564186413148994999598803524036314036342003924992
    assert [z+164] = 101124393921507072588780839232351213212137894380852254671327525890574254400
    assert [z+165] = 10789981467949869327524139328322388105678345564497109332642118957548063
    assert [z+166] = 71129397878461779534956962968985389279353636154986880236849530932206387288
    assert [z+167] = 3978831763935530197346339017410514767077725575010687526805311659824398592
    assert [z+168] = 470319712107272843988449895088496099207113983699769513335711008221593371
    assert [z+169] = 254846983882437640014452319269532267882710882656170907837550335557355510567
    assert [z+170] = 128979869955317295486107447367310732700291738364781461810550828391414645273
    assert [z+171] = 71129397878447323296100192979983459504982951844535988957653846339018760232
    assert [z+172] = 104243983782062268585296577659414047784164295295584234553640959387237369655
    assert [z+173] = 27719142978715517716343424897099935720856044467200243139850525767134889728
    assert [z+174] = 2236165839890538146839938222269500907038979999816249206413527271321183152
    assert [z+175] = 113575171582724578032984309098732981712140585092620887307159568887788113977
    assert [z+176] = 1703126937146583160214657860524210235915060889451148285633075663093832
    assert [z+177] = 5745679460591092816414205114397401095827489587978538189921647021899399224
    assert [z+178] = 3978832290497228050400582527926860433483343924592645408589122806049407552
    assert [z+179] = 224517697331106974502271217888597759247890087778955600116740840137100902912
    assert [z+180] = 2201657112707436493254992640706230516318594023792170028540114323827064901
    assert [z+181] = 123680837151275367623573585657371616008700272437361195173344987249001834277
    assert [z+182] = 311409599271617247911880621353521216741379637356547472197883332918578577408
    assert [z+183] = 113293251420485118450341677688556340631348563170720959031108444060053975104
    assert [z+184] = 112162646132031438434815150502072019969856595861865412556341183751651391
    assert [z+185] = 76206933141721022887478416938798076569062464275310769192930773193640116541
    assert [z+186] = 277717375915554260182209769309834188817565928943103714194462690526117120
    assert [z+187] = 442686563094376317830756378044674509830381475580492297828422683931715650
    assert [z+188] = 277771295812102437738885882564056795252817207028012706000196991306972928
    assert [z+189] = 456570936450698621764183206410750231626161537634496441610265047947280452
    assert [z+190] = 115122962340943078877950355493786074400913491929406940639932522722639235383
    assert [z+191] = 47154467430852383473390249123977257385007157952184166792536897464612441088
    assert [z+192] = 505341482851198277467755636461545118374755196424631127509592601826164805
    assert [z+193] = 81552895070113437367865995805868540706194615880014125348687943095382196781
    assert [z+194] = 71129397873555775133656351512353559408161085314465971361143537108675214336
    assert [z+195] = 141770335458836710572867080913981996549612027986726905941378392223979022404
    assert [z+196] = 1731034696045689539526935911374154986963990177377691786421084383522880
    assert [z+197] = 183767626194652845663069386377422475840472688719362514567790480734680534016
    assert [z+198] = 505341482851198277275819548006817494930623612395712921174534620844009547
    assert [z+199] = 1864886626791115844844231059279882401238745194712394201820890244071168
    assert [z+200] = 456840535917360932993087307765797944125877941671213483107778561849720610
    assert [z+201] = 254840090395758722704964001709417536369762198073716105622331352767050825777
    assert [z+202] = 71115594382483623052347074287767171193990467964448780560559997685830091119
    assert [z+203] = 107777704349261299168572212994257883593182500677684699457238309434634731520
    assert [z+204] = 18124012774883415548255794292671942518242966214311732843428317667954942318
    assert [z+205] = 205626840401543526289087649778491981012995423381002626901045080506763716664
    assert [z+206] = 553652851294975003314252279160354749792571312056232520215920476894541824
    assert [z+207] = 141735076011620266546594308303219902108036810704919579609000934987811333505
    assert [z+208] = 196347781838356682768311368518618347151076870296911058999395005255167522816
    assert [z+209] = 141735453450873599787370341020488082134062092965038814594964402695326138369
    assert [z+210] = 95679993690416904248452790339942671048618485960157848985785858235207788600
    assert [z+211] = 553653904417891688890983135789671213385001421477220150444699857079777323
    assert [z+212] = 249545501880380411058664653212337394509127469236940027470989698653749248
    assert [z+213] = 84808691989012068345353317182255656347107717012350642242626505317749096478
    assert [z+214] = 59199274129871733020946997083385146828271377837475328279567007855518154799
    assert [z+215] = 7847977363112462351806323062418587561136658277544763563482854576236600
    assert [z+216] = 553652114108933323411700527219225801452505492269559666991423811823875840
    assert [z+217] = 141728282104648768421707382532131522156964382890493341851902858453690292736
    assert [z+218] = 67313816310419997316074428079890166418649360115329718281769242742814146852
    assert [z+219] = 56540404362928622182232007198160318833219912717958797469025801238507102976
    assert [z+220] = 324382206320697739591115687439890820713763724922635556615970210198004224
    assert [z+221] = 95630602347327422327042608520767307882844358607786574612867447410684612392
    assert [z+222] = 8065657878168244813694489971239681699911010049803711811548167339518464
    assert [z+223] = 2057637071794398472486343532715520112714373091120254589231263853215689348
    assert [z+224] = 153957255777191792217710838367118237215988433731180214409303947703941005313
    assert [z+225] = 92228040658832236082364052689222084518015398782686589764972347394066231415
    assert [z+226] = 70673888067376493941436222236848052336158642564818935680120967167192596771
    assert [z+227] = 93644164868674954393574205539985288201812932887938360143906708646077998977
    assert [z+228] = 196320174851324015956702452200460323120360125083033987105242213392155424512
    assert [z+229] = 141728659543902102054610700076447916709054329097167421805305694149093490767
    assert [z+230] = 84808662900606863090658182362768912160348360435297807531497492088646084662
    assert [z+231] = 270165626041789595982532880813643764447220997353647211275498219829735703
    assert [z+232] = 256150680997183327674336793315349942227962094072133220928288261922952960
    assert [z+233] = 74388106210649987488642954736527656005492101773531881660400843806931429632
    assert [z+234] = 365792679019805806767676741644733460767067890225215742586133310892749118
    assert [z+235] = 256725159548235307128123348335053851678133068001628558639898366348176421
    assert [z+236] = 332793596561191839862999165180088502169821001685288118864324361583602688
    assert [z+237] = 338185693626215212012344614831386377706858983591582531685010929598080512
    assert [z+238] = 77931159777393911885843088142380385246358978872692275005110579386056720680
    assert [z+239] = 85127222894171821379617946297728735933546790092518642891306852545448781872
    assert [z+240] = 85086023040756268101515341870736075529052119297766075261290903175879472128
    assert [z+241] = 231837747772746604858036646270019942938021050589398552487498079884576044032
    assert [z+242] = 388065707855949216653432702811989302530397733819299035367096685820903424
    assert [z+243] = 77741303707684232327104648933215907272714932226897877739868643791946645505
    assert [z+244] = 77969033975678422313302276277849893304345945765483127809287352116690295683
    assert [z+245] = 168154148006369339640434548060738484806795917125499401240720731400992469760
    assert [z+246] = 339834362509942010651521211819070510597964373427992196343185602627642152
    assert [z+247] = 95409747413686266410553574558684453616802302015074978585735364116513957942
    assert [z+248] = 270543065295400602739328396765774325430659875675488805490028380449418272
    assert [z+249] = 71047497766754726394895398440356590636852736424900721107319756495967635496
    assert [z+250] = 95721404168431749734539575190396238228086650941317945199175131773758537760
    assert [z+251] = 68908335623139615333333137815953801157471661065155032960710870378670469120
    assert [z+252] = 220856010623902340627895234099402876284077561334697932946439310779940864
    assert [z+253] = 92111790618435594825769951596743688118667728170527404822510166613071777578
    assert [z+254] = 808798863019824524406765652832772692685398620104764811864410012268070
    assert [z+255] = 71046581019141989616755087404232153443487880097480742109533347826946801704
    assert [z+256] = 99255098508679024592581417708819510746109576370768015731504165173291778096
    assert [z+257] = 42405844156130832901601330568282887635860147169195877366351568849326779392
    assert [z+258] = 331283839455495263942519664392067326949415487403476067251701781111308289
    assert [z+259] = 74414632285070766190997650179299225011096330014234549782477176579120693327
    assert [z+260] = 61839652216922987452423305416825159216577492238874203129249207612928950403
    assert [z+261] = 97535479389299300548689423042549647823293929392970957082057075746372845620
    assert [z+262] = 7959292462040772868720361365602041580534491056535674535905280984625212
    assert [z+263] = 249851456770711462708541453750247806798271434636393289719580861828965632
    assert [z+264] = 214078826516239781663650992499434349679335248911318858215216851266181857317
    assert [z+265] = 52151944808264641398231659747699618607969190322261008082796082428087566390
    assert [z+266] = 55595022660585508869420665450882543145217166505648723540505965674434134070
    assert [z+267] = 8122575457885299550492728088108047717778615733842740949106963758710821
    assert [z+268] = 8036802274781347035733947155338521805025950542407802006023771550916608
    assert [z+269] = 92044902990691767444518271704559431814487333990659317746337544103186661427
    assert [z+270] = 7876411696410125505412593551891104089588513801014279821921710447802368
    assert [z+271] = 139836282752481051330175797821081839936631520320044845510476553108635582465
    assert [z+272] = 56842787562363315188666444765536241655764615627775639483882962324065091872
    assert [z+273] = 75975938281607912543245885638080217672582779612089540313134953861893598238
    assert [z+274] = 71046585341127452442298656330933498461811826993068538470653234863173804584
    assert [z+275] = 98944519941109721099143192169935245786538952917755970554352088832664404012
    assert [z+276] = 107978819114047136444834425956510717787781632290746860709313571901772675072
    assert [z+277] = 139884595085190491930282097115174838881816007037924508301446500080025351936
    assert [z+278] = 65671200785276532384276241506295723728256640240599269410581458967962860674
    assert [z+279] = 182288924524596414572983331749147389281724634467060157560384273132801097728
    assert [z+280] = 92228040346817923230003158994191166574843043231553308956746636420214161408
    assert [z+281] = 56911805034679316472960924793196283822948114950368562618518065785542030110
    assert [z+282] = 77741276537112937924165773935715331865179752092798100251540492900206903608
    assert [z+283] = 1326740789229856679631483358703416526769956332171837187634191518479360
    assert [z+284] = 304705549942550031659405872964368833757294362466185729148074774140026880
    assert [z+285] = 86825052600794547236304867424878247134669841360338146539482815461574311980
    assert [z+286] = 69184291617946501876159583705490024162874716472038029393013252178944131124
    assert [z+287] = 60074315383651546352314295483493009715613962914581618046117244100811751476
    assert [z+288] = 31804760978934646657688696853244983223370656332125010727453441184602521600
    assert [z+289] = 44178054881576739107321323447690335013805815340510170084251697066292701952
    assert [z+290] = 647143673962377239650537291179574903265283003054786426457042925679211
    assert [z+291] = 948220601387178292167091699792153139380863045662351144436349468749
    assert [z+292] = 112249243705633536921989954081205989120
    assert [z+293] = 32
    let z_len = 294

    return (z_len, z)
end
